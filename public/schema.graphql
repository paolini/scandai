scalar ObjectId

scalar Timestamp

scalar JSON

type LocalizedString {
    en: String
    fu: String
    it: String
}

input LocalizedStringInput {
    en: String
    fu: String
    it: String
}

type Config {
    siteTitle: LocalizedString
}

type Account {
    provider: String
}

type School {
    _id: ObjectId
    name: String
    city: String
    city_fu: String
}

type User {
    _id: ObjectId
    name: String
    username: String
    email: String
    image: String
    isAdmin: Boolean
    isSuper: Boolean
    isTeacher: Boolean
    isStudent: Boolean
    isViewer: Boolean
}

type Profile {
    _id: ObjectId
    name: String
    username: String
    email: String
    isTeacher: Boolean
    isStudent: Boolean
    isAdmin: Boolean
    isSuper: Boolean
    isViewer: Boolean
    image: String
    accounts: [Account]
} 

type Poll {
    _id: ObjectId
    secret: String
    adminSecret: String
    entriesCount: Int
    date: Timestamp
    school: School
    class: String
    year: String
    form: String
    closed: Boolean
    createdBy: User
    createdAt: Timestamp
}

type Translation {
    source: String
    map: LocalizedString
}

type Query {
    hello: String
    config: Config!
    profile: Profile
    polls(year: Int, _id: ObjectId, adminSecret: String): [Poll]
    schools(year: Int): JSON
    stats(poll: ObjectId, polls: [ObjectId], 
        adminSecret: String, schoolSecret: String,
        year: Int,
        class: String, city: String, form: String,
        schoolId: ObjectId,
    ): JSON
    translations: JSON
}

type Mutation {
    setProfile(name: String, isTeacher: Boolean, isStudent: Boolean): User
    newPoll(school: ObjectId, class: String, year: String, form: String): ObjectId
    deletePoll(_id: ObjectId!): Boolean
    openPoll(_id: ObjectId!, secret: String): Boolean
    closePoll(_id: ObjectId!, secret: String): Boolean
    pollCreateAdminSecret(_id: ObjectId!, secret: String): Boolean 
    pollRemoveAdminSecret(_id: ObjectId!, secret: String): Boolean
    postTranslation(source: String!, map: LocalizedStringInput!): Translation
}
