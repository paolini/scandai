scalar ObjectId

scalar Timestamp

scalar JSON

type LocalizedString {
    en: String
    fu: String
    it: String
}

input LocalizedStringInput {
    en: String
    fu: String
    it: String
}

type Config {
    siteTitle: LocalizedString
}

type Account {
    provider: String
}

type School {
    _id: ObjectId
    name: String
    city: String
    city_fu: String
    reportSecret: String
    pollCount: Int
}

input SchoolData {
    name: String!
    city: String!
    city_fu: String
}

type User {
    _id: ObjectId
    name: String
    username: String
    email: String
    image: String
    isAdmin: Boolean
    isSuper: Boolean
    isTeacher: Boolean
    isStudent: Boolean
    isViewer: Boolean
    accounts: [Account!]
}

type Profile {
    _id: ObjectId
    name: String
    username: String
    email: String
    image: String
    isAdmin: Boolean
    isSuper: Boolean
    isTeacher: Boolean
    isStudent: Boolean
    isViewer: Boolean
} 

input PatchUserData {
    name: String
    username: String
    email: String
    image: String
    isAdmin: Boolean
    isSuper: Boolean
    isTeacher: Boolean
    isStudent: Boolean
    isViewer: Boolean
    password: String
}

type Poll {
    _id: ObjectId
    secret: String
    adminSecret: String
    entriesCount: Int
    date: Timestamp
    school: School
    class: String
    year: String
    form: String
    closed: Boolean
    createdBy: User
    createdAt: Timestamp
}

type Translation {
    source: String
    map: LocalizedString
}

type Query {
    hello: String
    config: Config!
    profile: Profile
    polls(year: Int): [Poll]
    poll(_id: ObjectId, adminSecret: String, secret: String): Poll
    schools(year: Int): [School!]!
    school(_id: ObjectId): School
    stats(poll: ObjectId, polls: [ObjectId], 
        adminSecret: String, schoolSecret: String,
        year: Int,
        class: String, city: String, form: String,
        schoolId: ObjectId,
    ): JSON
    translations: JSON
    users: [User!]!
}

type Mutation {
    submit(_id: ObjectId!, answers: JSON, lang: String, timestamp: Timestamp): Boolean
    
    newUser(name: String, username: String, email: String): Profile
    patchUser(_id: ObjectId!, data: PatchUserData!): Profile
    deleteUser(_id: ObjectId!): Boolean
    setProfile(name: String, isTeacher: Boolean, isStudent: Boolean): Profile

    newPoll(school: ObjectId, class: String, year: String, form: String): ObjectId
    deletePoll(_id: ObjectId!): Boolean
    openPoll(_id: ObjectId!, secret: String): Boolean
    closePoll(_id: ObjectId!, secret: String): Boolean
    pollCreateAdminSecret(_id: ObjectId!, secret: String): Boolean 
    pollRemoveAdminSecret(_id: ObjectId!, secret: String): Boolean
    pollsRemoveAdminSecrets(year: Int): Int

    newSchool(data: SchoolData!): School
    patchSchool(_id: ObjectId!, data: SchoolData!): School
    schoolCreateSecret(_id: ObjectId!): School
    schoolRemoveSecret(_id: ObjectId!): School

    postTranslation(source: String!, map: LocalizedStringInput!): Translation
}
